import { Task } from "@prisma/client";
import Head from "next/head";
import Link from "next/link";
import { useState, useEffect } from "react";
import TaskModal from "~/components/TaskModal";
import {HiX} from "react-icons/hi";

import { api } from "~/utils/api";
import DetailsModal from "~/components/DetailsModal";

export default function Home() {

  const [task, setTask] = useState<Task[]>([]);
  const [modalOpen, setModalOpen] = useState<boolean>(false);
  const [modalOpenDetails, setModalOpenDetails] = useState<boolean>(false);
  const [idTask, setIdTask] = useState<string>("");

  const { data: tasksData } = api.task.getAll.useQuery();
  
  useEffect(() => {
    if (tasksData) {
      setTask(tasksData);
    }
  }, [tasksData]);

  const { mutate: deleteTask} = api.task.delete.useMutation({
    onSuccess(data){
      setTask((prev) => prev.filter((item) => item.id !== data.id))
    }
  });

  const { mutate: toggleChecked } = api.task.toggleChecked.useMutation({
    onSuccess(ItemTask) {
      setTask((prev) =>
        prev.map((item) =>
          item.id === ItemTask.id
            ? { ...item, completed: ItemTask.completed }
            : item
        )
      );
    },
  });

  return (
    <>
      <Head>
        <title>To do list</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

     {modalOpen && <TaskModal setModalOpen={setModalOpen} setTask={setTask}/>}

      {modalOpenDetails && <DetailsModal setModalOpen={setModalOpenDetails} taskId={idTask}/>}
      
      <main className="mx-auto my-12 max-x-3xl">
        <div className="flex justify-between">
          <h2 className="text-2xl font-semibold">My to-do list</h2>
          <button type="button" onClick={() => setModalOpen(true)} className="bg-violet-500 transition hover:bg-violet-600 text-sm p-2 rounded-md text-white">Add task</button>
        </div>

        <ul className="mt-4">
          {task?.map((item) => {
            const {id, title, completed} = item
            return (
              <li key={id} className="flex justify-between items-center">
                <div>
                  <input type="checkbox" 
                  checked={completed}
                  onChange={() =>{ toggleChecked({
                    id,
                    completed:!completed,
                  })} }/>
                  <span onClick={() => { setIdTask(id), setModalOpenDetails(true)}} >{title}</span>
                </div>
                <HiX onClick={() => deleteTask({id})} className='cursor-pointer text-lg text-red-500' />
              </li>
              )}
          )}
        </ul>
      </main>
    </>
  );
}
